rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    // Allow read access to all authenticated users for payment proofs
    match /payment-proofs/{orderId}/{allPaths=**} {
      allow read, write: if request.auth != null && request.auth.uid != null;
    }

    // Allow general read access for public files (if needed in future)
    match /public/{allPaths=**} {
      allow read: if true;
    }
  }
}

service cloud.firestore {
  match /databases/{database}/documents {
    // TEMPORARY: Allow open access to products for development
    match /products/{productId} {
      allow read, write: if true; // Temporary fix
    }

    // Allow read/write access to orders for authenticated users and admins
    match /orders/{orderId} {
      // Users can access their own orders
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Admins and owners can access all orders - check user role in users collection
      allow read, write, delete: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role in ['admin', 'owner']);
    }

    // Allow read/write access to user profiles for the user themselves
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow read/write access to user addresses for the user themselves
    match /user_addresses/{addressId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }

    // Allow read/write access to user carts for authenticated users
    match /user_carts/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Allow read/write access to categories for authenticated users
    match /categories/{categoryId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid != null;
    }

    // Allow read/write access to flash sales for authenticated users
    match /flashSales/{flashSaleId} {
      allow read, write: if true; // Temporary fix
    }
  }
}